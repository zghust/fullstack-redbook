{"version":3,"file":"static/js/306.2c27f4fc.chunk.js","mappings":"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","sources":["pages/add/style.js","pages/add/index.jsx","../node_modules/antd-mobile-icons/es/InformationCircleOutline.js"],"sourcesContent":["import styled from 'styled-components'\r\nexport const AddWrapper = styled.div`\r\n  .add {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100vh;\r\n    padding: 20px;\r\n    .top {\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-size: 20px;\r\n      padding-bottom: 30px;\r\n      .back {\r\n        padding: 10px 20px;\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { memo, useState, useRef } from 'react'\r\n// import ImgCrop from 'antd-img-crop'\r\nimport { TextArea, Divider, Input, Toast } from 'antd-mobile'\r\nimport http from '../../utils/http'\r\nimport {\r\n  LeftOutline,\r\n  InformationCircleOutline,\r\n  AddOutline,\r\n} from 'antd-mobile-icons'\r\nimport { Form, Button, Upload, Space } from 'antd'\r\nimport { AddWrapper } from './style'\r\n\r\nfunction Add({ navigate }) {\r\n  const [fileList, setFileList] = useState([])\r\n  const [ImageUrl, setImageUrl] = useState()\r\n  // const [state, setstate] = useState('已发布')\r\n  const ref = useRef()\r\n  // const onclick = () => {\r\n  //   setstate('草稿')\r\n  //   ref.current.click()\r\n  // }\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    reader.readAsDataURL(img)\r\n  }\r\n  const onUpload = async ({ title, content }) => {\r\n    try {\r\n      // 创建一个 FormData 对象\r\n      const addarticle = new FormData()\r\n      //将form表单内容添加进去\r\n      addarticle.append('title', title)\r\n      addarticle.append('content', content)\r\n      // addarticle.append('state', state)\r\n      // 将上传所有文件添加到 FormData 中\r\n      fileList.forEach((file) => {\r\n        addarticle.append('cover', file)\r\n      })\r\n\r\n      // 发送 POST 请求到后端的上传端点\r\n      if (fileList.length !== 0) {\r\n        const res = await http({\r\n          method: 'post',\r\n          url: '/moment/my',\r\n          data: addarticle,\r\n        })\r\n        // 处理后端的响应\r\n        Toast.show(res.data.message)\r\n        navigate('/home')\r\n      } else {\r\n        Toast.show('封面不能为空~')\r\n      }\r\n    } catch (error) {\r\n      // 处理错误\r\n      console.error('上传失败:', error)\r\n    }\r\n  }\r\n  function compressImage(file, callback) {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = (event) => {\r\n      const img = new Image()\r\n      img.src = event.target.result\r\n      img.onload = () => {\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n        const maxWidth = 800 // 设置最大宽度\r\n        const maxHeight = 600 // 设置最大高度\r\n        let width = img.width\r\n        let height = img.height\r\n\r\n        if (width > height) {\r\n          if (width > maxWidth) {\r\n            height *= maxWidth / width\r\n            width = maxWidth\r\n          }\r\n        } else {\r\n          if (height > maxHeight) {\r\n            width *= maxHeight / height\r\n            height = maxHeight\r\n          }\r\n        }\r\n\r\n        canvas.width = width\r\n        canvas.height = height\r\n        ctx.drawImage(img, 0, 0, width, height)\r\n\r\n        // 将压缩后的图片转为 Blob 对象\r\n        canvas.toBlob((blob) => {\r\n          const compressedFile = new File([blob], file.name, {\r\n            type: file.type,\r\n            lastModified: Date.now(),\r\n          })\r\n          callback(compressedFile)\r\n        }, file.type)\r\n      }\r\n    }\r\n  }\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file)\r\n      const newFileList = fileList.slice()\r\n      newFileList.splice(index, 1)\r\n      setFileList(newFileList)\r\n    },\r\n    beforeUpload: (file) => {\r\n      const isImage = file.type.startsWith('image/')\r\n      if (!isImage) {\r\n        Toast.show('只能上传图片文件！')\r\n        return false\r\n      }\r\n      // 直接压缩图片\r\n      compressImage(file, (compressedFile) => {\r\n        getBase64(compressedFile, (url) => {\r\n          setImageUrl(url)\r\n        })\r\n        setFileList([...fileList, compressedFile])\r\n      })\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  return (\r\n    <AddWrapper>\r\n      <div className=\"add\">\r\n        <div className=\"top\">\r\n          <div onClick={() => navigate(-1)} className=\"back\">\r\n            <LeftOutline fontSize={20} />\r\n          </div>\r\n          <InformationCircleOutline fontSize={20} />\r\n        </div>\r\n        <div>\r\n          <Form onFinish={onUpload}>\r\n            <Form.Item\r\n              name=\"cover\"\r\n              rules={[{ required: true, message: '文章封面不能为空！' }]}\r\n            >\r\n              <div>\r\n                {/* <ImgCrop\r\n                  rotationSlider\r\n                  modalWidth={350}\r\n                  modalHeight={300}\r\n                  resize={true}\r\n                > */}\r\n                <Upload\r\n                  listType=\"picture-card\"\r\n                  showUploadList={false}\r\n                  {...props}\r\n                >\r\n                  {!!ImageUrl ? (\r\n                    <img\r\n                      className=\"head\"\r\n                      src={ImageUrl}\r\n                      style={{ width: 100, height: 100 }}\r\n                      alt=\"cover\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      <AddOutline fontSize={24} color=\"grey\" />\r\n                    </div>\r\n                  )}\r\n                </Upload>\r\n                {/* </ImgCrop> */}\r\n              </div>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"title\"\r\n              rules={[{ required: true, message: '文章标题不能为空！' }]}\r\n            >\r\n              <Input placeholder=\"请输入文章标题\" style={{ width: 400 }} />\r\n            </Form.Item>\r\n            <Divider />\r\n            <Form.Item\r\n              name=\"content\"\r\n              rules={[{ required: true, message: '文章内容不能为空！' }]}\r\n            >\r\n              <TextArea\r\n                placeholder=\"请输入内容\"\r\n                rows={15}\r\n                showCount\r\n                maxLength={3000}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Space size=\"large\">\r\n                {/* <Button onClick={onclick}>存为草稿</Button> */}\r\n                <Button type=\"primary\" htmlType=\"submit\" ref={ref}>\r\n                  发布文章\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </AddWrapper>\r\n  )\r\n}\r\nexport default memo(Add)\r\n","import * as React from \"react\";\n\nfunction InformationCircleOutline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 49 48\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\"\n  }, props, {\n    style: Object.assign({\n      verticalAlign: '-0.125em'\n    }, props.style),\n    className: ['antd-mobile-icon', props.className].filter(Boolean).join(' ')\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"InformationCircleOutline-InformationCircleOutline\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(1.000000, 0.000000)\",\n    id: \"InformationCircleOutline-\\u7F16\\u7EC4\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"InformationCircleOutline-\\u77E9\\u5F62\",\n    fill: \"#FFFFFF\",\n    opacity: 0,\n    x: 0,\n    y: 0,\n    width: 48,\n    height: 48\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24,2 C36.1502645,2 46,11.8497355 46,24 C46,36.1502645 36.1502645,46 24,46 C11.8497355,46 2,36.1502645 2,24 C2,11.8497355 11.8497355,2 24,2 Z M24,5 C13.5065898,5 5,13.5065898 5,24 C5,34.4934102 13.5065898,43 24,43 C34.4934102,43 43,34.4934102 43,24 C43,13.5065898 34.4934102,5 24,5 Z M25.6,20 C25.8209139,20 26,20.1790861 26,20.4 L26,34.6 C26,34.8209139 25.8209139,35 25.6,35 L23.4,35 C23.1790861,35 23,34.8209139 23,34.6 L23,23 L21.4,23 C21.1790861,23 21,22.8209139 21,22.6 L21,20.4 C21,20.1790861 21.1790861,20 21.4,20 L25.6,20 Z M25.6,14 C25.8209139,14 26,14.1790861 26,14.4 L26,16.6 C26,16.8209139 25.8209139,17 25.6,17 L23.4,17 C23.1790861,17 23,16.8209139 23,16.6 L23,14.4 C23,14.1790861 23.1790861,14 23.4,14 L25.6,14 Z\",\n    id: \"InformationCircleOutline-\\u5F62\\u72B6\\u7ED3\\u5408\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }))));\n}\n\nexport default InformationCircleOutline;"],"names":["AddWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Add","_ref","navigate","fileList","setFileList","useState","ImageUrl","setImageUrl","ref","useRef","props","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","type","startsWith","Toast","show","callback","reader","FileReader","readAsDataURL","onload","event","img","Image","src","target","result","canvas","document","createElement","ctx","getContext","width","height","drawImage","toBlob","blob","compressedFile","File","name","lastModified","Date","now","compressImage","getBase64","addEventListener","url","_jsx","children","_jsxs","className","onClick","LeftOutline","fontSize","InformationCircleOutline","Form","onFinish","async","title","content","_ref2","addarticle","FormData","append","forEach","length","res","http","method","data","message","error","console","Item","rules","required","Upload","listType","showUploadList","style","alt","AddOutline","color","Input","placeholder","Divider","TextArea","rows","showCount","maxLength","Space","size","Button","htmlType","memo","React","Object","assign","viewBox","xmlns","xmlnsXlink","verticalAlign","filter","Boolean","join","id","stroke","strokeWidth","fill","fillRule","transform","opacity","x","y","d"],"sourceRoot":""}